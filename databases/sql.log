timestamp: 2013-06-13T12:07:00.374254
CREATE TABLE auth_user(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    username CHAR(512),
    first_name CHAR(512),
    last_name CHAR(512),
    email CHAR(512),
    password CHAR(512),
    created_on TIMESTAMP,
    modified_on TIMESTAMP,
    registration_key CHAR(512),
    reset_password_key CHAR(512),
    registration_id CHAR(512)
);
success!
timestamp: 2013-06-13T12:07:00.526580
CREATE TABLE auth_group(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    role CHAR(512),
    description TEXT
);
success!
timestamp: 2013-06-13T12:07:00.683148
CREATE TABLE auth_membership(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER REFERENCES auth_user(id) ON DELETE CASCADE,
    group_id INTEGER REFERENCES auth_group(id) ON DELETE CASCADE
);
success!
timestamp: 2013-06-13T12:07:00.840028
CREATE TABLE auth_permission(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    group_id INTEGER REFERENCES auth_group(id) ON DELETE CASCADE,
    name CHAR(512),
    table_name CHAR(512),
    record_id INTEGER
);
success!
timestamp: 2013-06-13T12:07:00.996842
CREATE TABLE auth_event(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    time_stamp TIMESTAMP,
    client_ip CHAR(512),
    user_id INTEGER REFERENCES auth_user(id) ON DELETE CASCADE,
    origin CHAR(512),
    description TEXT
);
success!
timestamp: 2013-06-13T12:07:01.164404
CREATE TABLE auth_cas(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER REFERENCES auth_user(id) ON DELETE CASCADE,
    created_on TIMESTAMP,
    service CHAR(512),
    ticket CHAR(512),
    renew CHAR(1)
);
success!
timestamp: 2013-06-13T12:07:01.334850
CREATE TABLE t_artist(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    f_name CHAR(512),
    is_active CHAR(1),
    created_on TIMESTAMP,
    created_by INTEGER REFERENCES auth_user(id) ON DELETE CASCADE,
    modified_on TIMESTAMP,
    modified_by INTEGER REFERENCES auth_user(id) ON DELETE CASCADE
);
success!
timestamp: 2013-06-13T12:07:01.501449
CREATE TABLE t_artist_archive(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    f_name CHAR(512),
    is_active CHAR(1),
    created_on TIMESTAMP,
    created_by INTEGER REFERENCES auth_user(id) ON DELETE CASCADE,
    modified_on TIMESTAMP,
    modified_by INTEGER REFERENCES auth_user(id) ON DELETE CASCADE,
    current_record INTEGER REFERENCES t_artist(id) ON DELETE CASCADE
);
success!
timestamp: 2013-06-13T12:07:01.658289
CREATE TABLE t_album(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    f_title CHAR(512),
    f_artist_id_reference INTEGER REFERENCES t_artist(id) ON DELETE CASCADE,
    is_active CHAR(1),
    created_on TIMESTAMP,
    created_by INTEGER REFERENCES auth_user(id) ON DELETE CASCADE,
    modified_on TIMESTAMP,
    modified_by INTEGER REFERENCES auth_user(id) ON DELETE CASCADE
);
success!
timestamp: 2013-06-13T12:07:01.848589
CREATE TABLE t_album_archive(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    f_title CHAR(512),
    f_artist_id_reference INTEGER REFERENCES t_artist(id) ON DELETE CASCADE,
    is_active CHAR(1),
    created_on TIMESTAMP,
    created_by INTEGER REFERENCES auth_user(id) ON DELETE CASCADE,
    modified_on TIMESTAMP,
    modified_by INTEGER REFERENCES auth_user(id) ON DELETE CASCADE,
    current_record INTEGER REFERENCES t_album(id) ON DELETE CASCADE
);
success!
timestamp: 2013-06-13T12:07:02.015535
CREATE TABLE t_song(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    f_title CHAR(512),
    f_album_id_reference INTEGER REFERENCES t_album(id) ON DELETE CASCADE,
    is_active CHAR(1),
    created_on TIMESTAMP,
    created_by INTEGER REFERENCES auth_user(id) ON DELETE CASCADE,
    modified_on TIMESTAMP,
    modified_by INTEGER REFERENCES auth_user(id) ON DELETE CASCADE
);
success!
timestamp: 2013-06-13T12:07:02.193840
CREATE TABLE t_song_archive(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    f_title CHAR(512),
    f_album_id_reference INTEGER REFERENCES t_album(id) ON DELETE CASCADE,
    is_active CHAR(1),
    created_on TIMESTAMP,
    created_by INTEGER REFERENCES auth_user(id) ON DELETE CASCADE,
    modified_on TIMESTAMP,
    modified_by INTEGER REFERENCES auth_user(id) ON DELETE CASCADE,
    current_record INTEGER REFERENCES t_song(id) ON DELETE CASCADE
);
success!
